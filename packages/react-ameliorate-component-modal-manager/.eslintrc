{
  "parser": "babel-eslint",

  "env": {
    "es6": true,
    "jasmine": true
  },

  "plugins": [
    "react",
    "extra-syntax",
    "analyze"
  ],

  "globals": {
    "__BUNDLE_START_TIME__": false,
    "__DEV__": true,
    "__dirname": false,
    "__filename": false,
    "__fbBatchedBridgeConfig": false,
    "alert": false,
    "cancelAnimationFrame": false,
    "clearImmediate": true,
    "clearInterval": false,
    "clearTimeout": false,
    "console": false,
    "document": false,
    "escape": false,
    "exports": false,
    "global": false,
    "jest": false,
    "pit": false,
    "Map": true,
    "module": false,
    "navigator": false,
    "process": false,
    "Promise": false,
    "requestAnimationFrame": true,
    "require": false,
    "Set": true,
    "setImmediate": true,
    "setInterval": false,
    "setTimeout": false,
    "window": false,
    "FormData": true,
    "XMLHttpRequest": false,
    "fetch": true,

    "ReactElement": false,
    "ReactClass": false,
    "Class": false
  },

  "rules": {
    "arrow-parens": [ 1, "always" ],
    // "warn about unneeded ternary use",
      "no-unneeded-ternary": 1,
    // "disallow trailing commas in object literals",
      "comma-dangle": 0,
    // "disallow assignment in conditional expressions",
      "no-cond-assign": 1,
    // "disallow use of console (off by default in the node environment)",
      "no-console": 0,
    // "disallow use of constant expressions in conditions",
      "no-constant-condition": 0,
    // "disallow control characters in regular expressions",
      "no-control-regex": 1,
    // "disallow use of debugger",
      "no-debugger": 1,
    // "disallow duplicate keys when creating object literals",
      "no-dupe-keys": 2,
    // "disallow empty statements",
      "no-empty": 0,
    // "disallow the use of empty character classes in regular expressions",
      "no-empty-character-class": 1,
    // "disallow assigning to the exception in a catch block",
      "no-ex-assign": 1,
    // "disallow double-negation boolean casts in a boolean context",
      "no-extra-boolean-cast": 1,
    // "disallow unnecessary parentheses (off by default)",
      "no-extra-parens": 0,
    // "disallow unnecessary semicolons",
      "no-extra-semi": 1,
    // "disallow overwriting functions written as function declarations",
      "no-func-assign": 0,
    // "disallow function or variable declarations in nested blocks",
      "no-inner-declarations": 0,
    // "disallow invalid regular expression strings in the RegExp constructor",
      "no-invalid-regexp": 1,
    // "disallow negation of the left operand of an in expression",
      "no-negated-in-lhs": 1,
    // "disallow the use of object properties of the global object (Math and JSON) as functions",
      "no-obj-calls": 1,
    // "disallow multiple spaces in a regular expression literal",
      "no-regex-spaces": 1,
    // "disallow reserved words being used as object literal keys (off by default)",
      "no-reserved-keys": 0,
    // "disallow sparse arrays",
      "no-sparse-arrays": 1,
    // "disallow unreachable statements after a return, throw, continue, or break statement",
      "no-unreachable": 0,
    // "disallow comparisons with the value NaN",
      "use-isnan": 1,
    // "Ensure JSDoc comments are valid (off by default)",
      "valid-jsdoc": 0,
    // "Ensure that the results of typeof are compared against a valid string",
      "valid-typeof": 1,
    // "Enforce consistent break style for blocks",
      "brace-style": 1,
    // "treat var statements as if they were block scoped (off by default)",
      "block-scoped-var": 0,
    // "specify the maximum cyclomatic complexity allowed in a program (off by default)",
      "complexity": 0,
    // "require return statements to either always or never specify values",
      "consistent-return": 0,
    // "specify curly brace conventions for all control statements",
      "curly": [1, "multi-or-nest", "consistent"],
    // "require default case in switch statements (off by default)",
      "default-case": 0,
    // "encourages use of dot notation whenever possible",
      "dot-notation": 0,
    // "require the use of === and !==",
      "eqeqeq": 1,
    // "make sure for-in loops have an if statement (off by default)",
      "guard-for-in": 0,
    // "disallow the use of alert, confirm, and prompt",
      "no-alert": 0,
    // "disallow use of arguments.caller or arguments.callee",
      "no-caller": 1,
    // "disallow division operators explicitly at beginning of regular expression (off by default)",
      "no-div-regex": 1,
    // "disallow else after a return in an if (off by default)",
      "no-else-return": 0,
    // "disallow comparisons to null without a type-checking operator (off by default)",
      "no-eq-null": 0,
    // "disallow use of eval()",
      "no-eval": 1,
    // "disallow adding to native types",
      "no-extend-native": 1,
    // "disallow unnecessary function binding",
      "no-extra-bind": 1,
    // "disallow fallthrough of case statements",
      "no-fallthrough": 1,
    // "disallow the use of leading or trailing decimal points in numeric literals (off by default)",
      "no-floating-decimal": 1,
    // "disallow use of eval()-like methods",
      "no-implied-eval": 1,
    // "disallow use of labeled statements",
      "no-labels": 1,
    // "disallow usage of __iterator__ property",
      "no-iterator": 1,
    // "disallow unnecessary nested blocks",
      "no-lone-blocks": 1,
    // "disallow creation of functions within loops",
      "no-loop-func": 0,
    // "disallow use of multiline strings",
      "no-multi-str": 0,
    // "disallow reassignments of native objects",
      "no-native-reassign": 0,
    // "disallow use of new operator when not part of the assignment or comparison",
      "no-new": 1,
    // "disallow use of new operator for Function object",
      "no-new-func": 1,
    // "disallows creating new instances of String,Number, and Boolean",
      "no-new-wrappers": 1,
    // "disallow use of octal literals",
      "no-octal": 1,
    // "disallow use of octal escape sequences in string literals, such as var foo = \"Copyright \\251\";",
      "no-octal-escape": 1,
    // "disallow usage of __proto__ property",
      "no-proto": 1,
    // "disallow declaring the same variable more then once",
      "no-redeclare": 0,
    // "disallow use of assignment in return statement",
      "no-return-assign": 1,
    // "disallow use of javascript: urls.",
      "no-script-url": 1,
    // "disallow comparisons where both sides are exactly the same (off by default)",
      "no-self-compare": 1,
    // "disallow use of comma operator",
      "no-sequences": 1,
    // "disallow usage of expressions in statement position",
      "no-unused-expressions": 0,
    // "disallow use of void operator (off by default)",
      "no-void": 1,
    // "disallow usage of configurable warning terms in comments",
      "no-warning-comments": 0,
    // "disallow use of the with statement",
      "no-with": 1,
    // "require use of the second argument for parseInt() (off by default)",
      "radix": 1,
    // "require a space after a semi-colon",
      "semi-spacing": 1,
    // "requires to declare all vars on top of their containing scope (off by default)",
      "vars-on-top": 0,
    // "require immediate function invocation to be wrapped in parentheses (off by default)",
      "wrap-iife": [ 1, "inside", { "functionPrototypeMethods": true } ],
    // "require or disallow Yoda conditions",
      "yoda": 1,
    // "Enforce consistent spaces inside braces",
      "object-curly-spacing" : 0,
    // "disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)",
      "no-catch-shadow": 1,
    // "disallow deletion of variables",
      "no-delete-var": 1,
    // "disallow labels that share a name with a variable",
      "no-label-var": 1,
    // "disallow declaration of variables already declared in the outer scope",
      "no-shadow": 0,
    // "disallow shadowing of names such as arguments",
      "no-shadow-restricted-names": 1,
    // "disallow use of undeclared variables unless mentioned in a /*global */ block.",
      "no-undef": 2,
    // "disallow use of undefined variable (off by default)",
      "no-undefined": 0,
    // "disallow use of undefined when initializing variables",
      "no-undef-init": 1,
    // "disallow declaration of variables that are not used in the code",
      "no-unused-vars": [1, {"vars": "all", "args": "none"}],
    // "disallow use of variables before they are defined",
      "no-use-before-define": 0,
    // "enforces error handling in callbacks (off by default) (on by default in the node environment)",
      "handle-callback-err": 1,
    // "disallow mixing regular variable and require declarations (off by default) (on by default in the node environment)",
      "no-mixed-requires": 1,
    // "disallow use of new operator with the require function (off by default) (on by default in the node environment)",
      "no-new-require": 1,
    // "disallow string concatenation with __dirname and __filename (off by default) (on by default in the node environment)",
      "no-path-concat": 1,
    // "disallow process.exit() (on by default in the node environment)",
      "no-process-exit": 0,
    // "restrict usage of specified node modules (off by default)",
      "no-restricted-modules": 1,
    // "disallow use of synchronous methods (off by default)",
      "no-sync": 0,
    "comma-spacing": 1,
    // "enforce one true brace style (off by default)",
      "no-multi-spaces": 0,
    // "require camel case names",
      "camelcase": 0,
    // "enforces consistent naming when capturing the current execution context (off by default)",
      "consistent-this": 0,
    // "enforce newline at the end of file, with no multiple empty lines",
      "eol-last": 1,
    // "require function expressions to have a name (off by default)",
      "func-names": 0,
    // "enforces use of function declarations or expressions (off by default)",
      "func-style": 0,
    // "require a capital letter for constructors",
      "new-cap": 0,
    // "disallow the omission of parentheses when invoking a constructor with no arguments",
      "new-parens": 1,
    // "disallow nested ternary expressions (off by default)",
      "no-nested-ternary": 0,
    // "disallow use of the Array constructor",
      "no-array-constructor": 1,
    // "disallow if as the only statement in an else block (off by default)",
      "no-lonely-if": 0,
    // "disallow use of the Object constructor",
      "no-new-object": 1,
    // "disallow space between function identifier and application",
      "no-spaced-func": 1,
    // "disallow the use of ternary operators (off by default)",
      "no-ternary": 0,
    // "disallow trailing whitespace at the end of lines",
      "no-trailing-spaces": [ 1, { "skipBlankLines": true } ],
    // "disallow dangling underscores in identifiers",
      "no-underscore-dangle": 0,
    // "disallow mixed spaces and tabs for indentation",
      "no-mixed-spaces-and-tabs": 1,
    // "require quotes around object literal property names (off by default)",
      "quote-props": 0,
    // "require or disallow use of semicolons instead of ASI",
      "semi": 1,
    // "sort variables within the same declaration block (off by default)",
      "sort-vars": 0,
    // "require or disallow spaces inside brackets (off by default)",
      "space-in-brackets": 0,
    // "require or disallow spaces inside parentheses (off by default)",
      "space-in-parens": [ 1, "never" ],
    // "require spaces around operators",
      "space-infix-ops": 1,
    // "require a space after return, throw, and case",
      "keyword-spacing": 1,
    // "require or disallow spaces before/after unary operators (words on by default, nonwords off by default)",
      "space-unary-ops": [ 1, { "words": true, "nonwords": false } ],
    // "specify the maximum depth callbacks can be nested (off by default)",
      "max-nested-callbacks": 0,
    // "allow just one var statement per function (off by default)",
      "one-var": 0,
    // "require regex literals to be wrapped in parentheses (off by default)",
      "wrap-regex": 0,
    // "Enforce spaces before blocks",
      "space-before-blocks" : 1,
    // "specify the maximum depth that blocks can be nested (off by default)",
      "max-depth": 0,
    // "specify the maximum length of a line in your program (off by default)",
      "max-len": 0,
    // "limits the number of parameters that can be used in the function declaration. (off by default)",
      "max-params": 0,
    // "specify the maximum number of statement allowed in a function (off by default)",
      "max-statements": 0,
    // "disallow use of bitwise operators (off by default)",
      "no-bitwise": 0,
    // "disallow use of unary operators, ++ and -- (off by default)",
      "no-plusplus": 0,

    "react/display-name": 0,
    "react/jsx-boolean-value": 0,
    "jsx-quotes": [1, "prefer-double"],
    "react/jsx-sort-props": 0,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/no-did-mount-set-state": [1],
    "react/no-did-update-set-state": [1],
    "react/no-multi-comp": 0,
    "react/no-unknown-property": 0,
    "react/prop-types": 0,
    "react/react-in-jsx-scope": 0,
    "react/self-closing-comp": 1,
    "react/wrap-multilines": 0,
    "react/jsx-no-undef": 2,

    "extra-syntax/ternary-parens": 1,

    "analyze/dangerous-diving": 1
  }
}
